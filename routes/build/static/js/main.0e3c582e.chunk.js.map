{"version":3,"sources":["components/FormInput.tsx","components/LoginPage/LoginForm.tsx","components/Navbar.tsx","contexts/tokenContext.ts","components/LoginPage/LoginPage.tsx","components/SignupPage/SignupForm.tsx","components/SignupPage/SignupPage.tsx","utils/dateFunctions.ts","components/Homepage/ApplicationView.tsx","components/Homepage/ApplicationManager.tsx","components/Homepage/ECview.tsx","components/Homepage/ECmanager.tsx","components/Homepage/Homepage.tsx","components/ApplicationPage/ApplicationPage.tsx","components/ECpage/ECpage.tsx","components/AppCreatePage/ECchooser.tsx","components/AppCreatePage/AppCreateForm.tsx","components/AppCreatePage/AppCreatePage.tsx","components/ECcreatePage/ReferenceChooser.tsx","components/ECcreatePage/ECcreateForm.tsx","components/ECcreatePage/ECcreatePage.tsx","components/ProfilePage/EssayViewer.tsx","components/ProfilePage/EssayManager.tsx","components/ProfilePage/Profile.tsx","components/EssayCreatePage/EssayForm.tsx","components/EssayCreatePage/EssayPage.tsx","app.tsx","index.tsx"],"names":["FormInput","props","name","type","onChange","defaultValue","className","htmlFor","e","Date","parse","target","value","LoginForm","useState","email","setEmail","password","setPassword","onClick","onSubmit","to","Navbar","pfp","text","tokenContext","createContext","data","setToken","redirect","a","ValidateLogin","axios","post","process","response","user_auth_token","toast","error","schema","joi","tlds","allow","validateAsync","details","message","LoginPage","useContext","Fragment","LogIn","history","replace","SignupForm","username","setUsername","configure","ValidateSignup","status","Promise","resolve","reject","undefined","min","max","SignupPage","SignUp","dateToDaysRemaining","s","millisecondsRemaining","now","daysRemaining","Math","floor","AppViewItem","app","uniName","programName","applicationOpenDate","applicationCloseDate","ROOT_URL","ApplicationManager","state","apps","getApps","token","get","headers","AppData","setState","this","length","nextPage","map","_id","Component","ECview","EC","ECmanager","ECs","getECdata","ECdata","ec","Homepage","push","App","delete","ID","console","log","ApplicationPage","AppID","match","params","id","setApp","useEffect","getAppData","then","substr","expectedResponseDate","relevantExtracurriculars","notes","deleteApplication","ECData","ECpage","ECID","SetEC","getECData","description","dateStarted","toDateString","onGoing","dateEnded","references","ref","phoneNumber","DeleteEC","ECchooser","chosenECs","onUpdate","includes","updated","index","indexOf","splice","ValidateApplication","required","messages","options","convert","includeAllExtraCurriculars","AppCreateForm","setUniName","setProgramName","setApplicationOpenDate","setApplicationCloseDate","setExpectedResponseDate","setRelevantExtracurriculars","setNotes","AppCreatePage","setECs","getECs","SubmitApplication","ReferenceChooser","setName","number","setNumber","placeholder","pattern","setReferences","findIndex","r","newReferences","ECcreateForm","disabled","ValidateEC","ECcreatePage","SubmitEC","EssayViewer","onClose","essay","title","body","targetSchool","onDelete","EssayManager","essays","selectedEssay","closeViewer","getEssays","responseData","deleteEssay","newEssays","es","ProfilePage","EssayForm","submitEdit","newEssay","put","goBack","submitNew","edit","EssayPage","path","render","Provider","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e3c582e.chunk.js","sourcesContent":["import React, {ChangeEvent} from 'react'\n\n\nexport interface FormInputProps {\n    name: string;\n    type: string;\n    onChange: Function\n    defaultValue? : string \n}\n\nconst FormInput = (props: FormInputProps) => {\n    let {name, type, onChange, defaultValue} = props\n    return (\n        <div className = \"form-input\">\n            <label htmlFor={name}>{name}</label>\n            <input defaultValue = {defaultValue} type = {type} name = {name} onChange={(e: ChangeEvent<HTMLInputElement>) : any => {\n                if (type === \"date\") return onChange(Date.parse(e.target.value))\n                else return onChange(e.target.value)\n            }\n        } /> \n        </div>\n\n    ) \n}\n\n\nexport default FormInput\n","import React, {useState} from 'react'\nimport FormInput from '../FormInput'\nimport { Link } from \"react-router-dom\"\nexport interface LoginData {\n    email : String;\n    password : String\n}\n\ninterface LoginFormProps {\n    onSubmit: (data: LoginData) => any\n}\n\nconst LoginForm = (props: LoginFormProps) => {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    return (\n        <div className = \"login-form-wrapper\">\n            <div className = \"login-form\">\n                    <FormInput type = \"email\" name = \"email\" onChange = {setEmail} />\n                    <FormInput type = \"password\" name = \"password\" onChange = {setPassword} />\n            </div>\n            <button className=\"login-submit-btn\" onClick={() => props.onSubmit({email, password})}>Log in</button>\n            <Link to = \"/signup\">Don't have an account? Sign up here.</Link>\n        </div>\n    )\n}\n\n\nexport default LoginForm","import React from 'react'\nimport { Link } from \"react-router-dom\"\nconst Navbar = (props: {text?: string, pfp?: boolean}) => {\n    return <div className = \"navbar\">\n                {props.pfp && <Link to = \"/profile\"><button>Profile</button></Link> }\n                <Link to = \"/login\">{props.text}</Link>\n            </div>\n}\n\nexport default Navbar","import { createContext , Context} from 'react'\n\n\nconst tokenContext: Context<any> = createContext({})\nexport default tokenContext","import React, { useContext } from 'react'\nimport LoginForm, { LoginData } from './LoginForm'\nimport axios from \"axios\"\nimport { RouteComponentProps } from 'react-router-dom'\nimport Navbar from '../Navbar'\nimport * as joi from \"joi\"\nimport tokenContext from '../../contexts/tokenContext'\nimport { toast } from 'react-toastify'\n\n\nconst LoginPage = (props: RouteComponentProps) => {\n    const { setToken } = useContext(tokenContext)\n    return (\n        <React.Fragment>\n            <Navbar />\n        <div className = \"login-page-wrapper\">\n            <LoginForm onSubmit = {(data: LoginData) => LogIn(data, setToken, props.history.replace)}/>\n        </div>\n        </React.Fragment>\n    )\n}\n\nasync function LogIn(data: LoginData, setToken: (t: string) => void, redirect: (path: string) => void) : Promise<void> {\n    if (!await ValidateLogin(data)) return \n    try {\n        const response = await axios.post(process.env.REACT_APP_root_url + \"/users/login\",  data)\n        setToken(response.data.user_auth_token)\n        redirect(\"/\")\n    }\n    catch(err: any) {\n\n    if (err.response) toast.error(err.response.data)\n    else toast.error(\"There was an error connecting to the server\")\n    }\n\n}\n\nasync function ValidateLogin(data: LoginData): Promise<boolean> {\n    const schema = joi.object({\n        email: joi.string().email({ tlds: { allow: false } }),\n        password: joi.string()\n    })\n\n    try {\n        await schema.validateAsync(data)\n        return true\n    }\n    catch(err: any) {\n        toast.error(err.details[0].message)\n        return false\n    }\n\n}\n\n\nexport default LoginPage","import React , {useState} from 'react'\nimport FormInput from '../FormInput'\n\nexport interface SignupData {\n    username: String;\n    email: String;\n    password: String\n}\n\nexport interface SignupFormProps {\n    onSubmit: (data : SignupData) => Promise<void>\n}\n\nconst SignupForm = (props: SignupFormProps) => {\n    const [username, setUsername] = useState(\"\")    \n    const [email, setEmail] = useState(\"\")    \n    const [password, setPassword] = useState(\"\")    \n\n    return (\n        <div className = \"signup-form-wrapper\">\n            <div className = \"signup-form\">\n                <FormInput name = \"Username\" type = \"text\" onChange = {setUsername}/>\n                <FormInput name = \"Email\" type = \"email\" onChange = {setEmail}/>\n                <FormInput name = \"Password (Minimum 8 characters)\" type = \"password\" onChange = {setPassword}/>\n            </div>\n                <button onClick ={() => props.onSubmit({username, email, password})} className = \"signup-submit-btn\">Sign Up</button>\n        </div>\n    )\n\n}\nexport default SignupForm","import React, { Fragment, useContext } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport SignupForm, {SignupData} from './SignupForm'\nimport Navbar from '../Navbar'\nimport { toast } from 'react-toastify'\nimport axios from 'axios'\nimport tokenContext from '../../contexts/tokenContext'\nimport * as joi from \"joi\"\ntoast.configure()\n\n\nconst SignupPage = (props: RouteComponentProps) => {\n    const { setToken } = useContext(tokenContext)\n    return (\n        <Fragment>\n            <Navbar />\n             <div className = \"signup-page-wrapper\">\n            <SignupForm onSubmit={(data: SignupData) => SignUp(data, setToken, props.history.replace)}/>\n            </div>\n        </Fragment>\n    )\n}\n\n\nasync function SignUp(data: SignupData, setToken: (token: string) => void, redirect: (path:string) => void) : Promise<void> {\n    if (! await ValidateSignup(data)) return  \n    try {\n        const response = await axios.post(process.env.REACT_APP_root_url + \"/users\", data)\n        if (response.status !== 200) {\n            toast.error(\"There was an error\")\n            return new Promise((resolve, reject) => resolve(undefined))\n        } \n        const { user_auth_token } = response.data\n        setToken(user_auth_token)\n        redirect(\"/\")\n    }\n    catch(err: any) {\n        if (err.response) toast.error(err.response.data)\n        else toast.error(\"There was en error connecting to the server\")\n    }\n}\n\n\nasync function ValidateSignup(data: SignupData): Promise<boolean> {\n    const schema = joi.object({\n        email: joi.string().email({tlds: {allow: false}}),\n        username: joi.string().min(6).max(255),\n        password: joi.string().min(6).max(255)\n    })\n\n    try {\n        await schema.validateAsync(data)\n        return true\n    }\n    catch(err: any) {\n        toast.error(err.details[0].message)\n        return false \n    }\n}\n\n\n\nexport default SignupPage","\nexport function dateToDaysRemaining(s: string): string {\n    const millisecondsInDay = 24 * 60 * 60 * 1000\n    const millisecondsRemaining = Date.parse(s) - Date.now()\n\n    const daysRemaining = Math.floor(millisecondsRemaining / millisecondsInDay)\n\n    return `${Math.max(0, daysRemaining)} days`\n\n}","import React from 'react'\nimport { Application } from '../@types'\nimport { dateToDaysRemaining } from \"../../utils/dateFunctions\"\n\ninterface AppViewItemProps {\n    app: Application\n    onClick: Function;\n\n}\n\nconst AppViewItem = (props: AppViewItemProps) => {\n    const { app } = props \n    return (\n        <div onClick = {() => props.onClick()} className = \"app-view-item\">\n            <span>{app.uniName}</span>   \n            <span>{app.programName}</span>   \n            <span>{dateToDaysRemaining(app.applicationOpenDate)}</span>   \n            <span>{dateToDaysRemaining(app.applicationCloseDate)}</span>   \n        </div>\n    )\n}\n\nexport default AppViewItem","import axios from 'axios'\nimport { Component } from 'react'\nimport { toast } from 'react-toastify'\nimport {Application} from \"../@types\"\nimport AppViewItem from './ApplicationView'\nimport {AiOutlinePlusCircle} from \"react-icons/ai\"\n\nconst ROOT_URL = process.env.REACT_APP_root_url\n\ninterface ApplicationManagerProps {\n    token: string\n    nextPage: (path: string) => void\n}\n\ninterface ApplicationManagerState {\n    apps: Application[]\n}\n\nexport default class ApplicationManager extends Component<ApplicationManagerProps> {\n    state: ApplicationManagerState =  {\n        apps: []\n    }\n\n    async componentDidMount() {\n        this.getApps()\n    }\n\n\n    render() {\n        if (this.state.apps.length === 0) return    <div className = \"app-box-wrapper app-box-wrapper-no-apps\">\n                                                        <h2 className = \"no-apps-message\"> No Applications To Show!</h2>\n                                                        <button className = \"app-add-button\" onClick = {() => this.props.nextPage(\"/applications/add\")}>Create New Application<AiOutlinePlusCircle/></button>\n                                                    </div>\n\n        return (<div className = \"app-box-wrapper\"> \n                       <h2>Your Applications</h2> \n                       <div className =\"app-box-title\">\n                           <span>University Name</span> \n                           <span>Program Name</span> \n                           <span>Applications Open</span> \n                           <span>Applications Close</span> \n                        </div> \n                      {this.state.apps.map(app => <AppViewItem key ={app._id} onClick = {() => {this.props.nextPage(\"/applications/\" + app._id)}} app = {app}/>)}  \n                      <button className = \"app-add-button\" onClick = {() => this.props.nextPage(\"/applications/add\")}>Create New Application<AiOutlinePlusCircle /></button>\n                </div>)\n    }\n\n\n    getApps = async () => {\n        try {\n            const {token} = this.props\n            const {data: AppData} = await axios.get(ROOT_URL + \"/applications\", {headers: {user_auth_token: token}})\n            this.setState({apps: AppData})\n        }\n        catch (err: any) {\n            toast.error(\"There was an error connecting to the server\")\n        }\n    }\n\n\n}\n","import React from 'react'\nimport { Extracurricular } from '../@types'\n\n\ninterface ECviewProps {\n    EC: Extracurricular\n    onClick: Function;\n\n}\n\nconst ECview = (props: ECviewProps) => {\n    const { EC, onClick } = props \n    return (\n        <div onClick = {() => onClick(\"/extracurriculars/\" + EC._id)} className = \"ec-view-item\">\n            <span>{EC.name}</span>   \n        </div>\n    )\n}\n\nexport default ECview","import axios from 'axios'\nimport React, { Component } from 'react'\nimport { toast } from 'react-toastify'\nimport { Extracurricular } from '../@types'\nimport ECview from './ECview'\nimport {AiOutlinePlusCircle} from \"react-icons/ai\"\n\nconst ROOT_URL = process.env.REACT_APP_root_url\n\ninterface ECmanagerProps {\n    token: string;\n    nextPage: (path: string) => void;\n}\n\ninterface ECmanagerState {\n    ECs: Extracurricular[]\n}\n \nexport default class ECmanager extends Component<ECmanagerProps> {\n    state: ECmanagerState = {\n        ECs: []\n    }\n\n    async componentDidMount() {\n        await this.getECdata()\n    }\n\n    render() {\n        return (<div className = \"ec-box-wrapper\"> \n                      <h2>Your Extracurriculars</h2>\n                      {this.state.ECs.map(ec => <ECview key={ec._id} onClick = {this.props.nextPage} EC = {ec}/>)}  \n                      <button className = \"ec-add-button\" onClick = {() => this.props.nextPage(\"/extracurriculars/add\")}>Add Extracurriculars<AiOutlinePlusCircle/></button>\n                </div>)\n    }\n\n    getECdata = async () => {\n        try {\n            const { token } = this.props\n            const { data: ECdata} = await axios.get(ROOT_URL + \"/extracurriculars\", {headers: {user_auth_token: token}})\n            this.setState({ECs: ECdata})\n        }\n        catch(err) {\n            toast.error(\"There was an error connecting to the server\")\n        }\n    }\n\n}","import React, {useContext} from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport tokenContext from '../../contexts/tokenContext'\nimport ApplicationManager from './ApplicationManager'\nimport ECmanager from './ECmanager'\nimport Navbar from '../Navbar'\n\nconst Homepage = (props: RouteComponentProps) => {\n\n    const {token} = useContext(tokenContext)\n    if (!token) return <Redirect to=\"/login\"/>\n    return (\n            <div className = \"homepage-wrapper\">\n                <div className = \"homepage\">\n                    <Navbar pfp = {true} text = \"Log out\"/>\n                    <ApplicationManager token = {token} nextPage = {props.history.push} />\n                    <ECmanager token = {token} nextPage = {props.history.push}/>\n                </div>\n            </div>\n        ) \n        \n\n}\n\n\nexport default Homepage","import axios from 'axios'\nimport React, { useContext , useState , useEffect} from 'react'\nimport { dateToDaysRemaining } from '../../utils/dateFunctions'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport tokenContext from '../../contexts/tokenContext'\nimport { Application } from '../@types'\n\nconst ROOT_URL = process.env.REACT_APP_root_url\n\nconst ApplicationPage = (props: RouteComponentProps) => {\n    // @ts-ignore\n    const AppID = props.match.params.id\n    const { token } = useContext(tokenContext)\n\n    const [App, setApp] = useState<Application>()\n    useEffect(() => {\n        getAppData(token, AppID).then(data => setApp(data))\n    }, [setApp, token, AppID])\n\n\n    if (!token) return <Redirect to =\"/login\" />\n    if (!App) return <div>No App Found</div>\n    else return (\n            <div className= \"app-page-wrapper\">\n            <div className = \"app-page\">\n                <div className = \"app-page-heading-wrapper\">\n                    <h2>{App.uniName}</h2>\n                    <h4>{App.programName}</h4>\n                </div>\n                <div className = \"app-dates\">\n                    <div>Application opens: {App.applicationOpenDate.substr(0,10)} ({dateToDaysRemaining(App.applicationOpenDate)})</div>\n                    <div>Application closes: {App.applicationCloseDate.substr(0,10)} ({dateToDaysRemaining(App.applicationCloseDate)})</div>\n                    <div>Expected response date: {App.expectedResponseDate.substr(0,10)} ({dateToDaysRemaining(App.expectedResponseDate)})</div>\n                </div>\n                <div className = \"app-page-ec-wrapper\">\n                    <h4>Relevant Extracurriculars</h4>\n                    <div className = \"app-page-ecs\">\n                        {App.relevantExtracurriculars.map(ec => <div key = {ec._id} onClick = {() => {props.history.push(\"/extracurriculars/\" + ec._id)}}>{ec.name}</div>)}\n                    </div>\n                </div>\n\n                <div className = \"app-page-notes\">\n                    <h4>Notes</h4>\n                    {App.notes}\n                    </div>\n                <button className = \"app-delete-button\" onClick = {() => deleteApplication(App, token, props.history.replace)}>Delete</button>\n            </div>\n        </div>\n    )\n}\n\n\nasync function deleteApplication(App: Application, token: string, redirect: Function) {\n    try {\n        await axios.delete(ROOT_URL + \"/applications/\" + App._id, {headers: {user_auth_token: token}})\n        redirect(\"/\")\n    }\n    catch(err){\n        toast.error(\"There was an error deleting your application\")\n    }\n}\n\n\nasync function getAppData(token: String, ID: string) : Promise<Application | undefined> {\n    try {\n        const { data : AppData } = await axios.get(ROOT_URL + \"/applications/\" + ID, {headers: {user_auth_token: token}})\n        return AppData\n    }\n    catch(err) {\n        console.log(err)\n        return undefined\n    }\n}\n\n\n\n\nexport default ApplicationPage","import axios from 'axios'\nimport React, { useContext , useState , useEffect} from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport tokenContext from '../../contexts/tokenContext'\nimport { Extracurricular } from '../@types'\n\nconst ROOT_URL = process.env.REACT_APP_root_url\n\nconst ECpage = (props: RouteComponentProps) => {\n    // @ts-ignore\n    const ECID = props.match.params.id\n    const { token } = useContext(tokenContext)\n\n    const [EC, SetEC] = useState<Extracurricular>()\n    useEffect(() => {\n        getECData(token, ECID).then(data => SetEC(data))\n    }, [SetEC, token, ECID])\n\n    if (!token) return <Redirect to =\"/login\" />\n    if (!EC) return <div>No EC Found</div>\n    else return (\n        <div className = \"ec-page-wrapper\">\n            <div className = \"ec-page\">\n                <h2>{EC.name}</h2>\n                <h5>Description</h5>\n                <p>{EC.description}</p>\n                <div className = \"ec-dates\">\n                    <span>Date Started: {new Date(Date.parse(EC.dateStarted)).toDateString()}</span>\n                    <span>{(EC.onGoing) ?  \"Date ended: This extracurricular is ongoing\" : `Date ended: ${new Date(Date.parse(EC.dateEnded!)).toDateString()}`}</span>\n                </div>\n\n                <div className = \"ec-references\">\n                    <h4>References:</h4>\n                    {EC.references && EC.references.map(ref => {\n                        return (\n                        <div key={ref.name} className = \"ec-reference-info\">\n                            <span>{ref.name}</span>\n                            <span>{ref.email}</span>\n                            <span>{ref.phoneNumber}</span>\n                        </div>)\n                    })}\n                    {EC.references && EC.references.length === 0 && <h3>No references</h3>}\n                </div>\n                <button className = \"ec-delete\" onClick = {() => DeleteEC(EC, token, props.history.replace)}>Delete</button>\n            </div>\n        </div>\n    )\n}\n\n\nasync function getECData(token: String, ID: string) : Promise<Extracurricular | undefined> {\n    try {\n        const { data : ECData } = await axios.get(ROOT_URL + \"/extracurriculars/\" + ID, {headers: {user_auth_token: token}})\n        return ECData\n    }\n    catch(err) {\n        return undefined\n    }\n}\n\nasync function DeleteEC(EC: Extracurricular, token: string, redirect: Function) {\n    try {\n        await axios.delete(ROOT_URL + \"/extracurriculars/\" + EC._id, {headers: {user_auth_token: token}})\n        redirect(\"/\")\n    }\n    catch(err: any) {\n        toast.error(err.response.data)\n    }\n}\n\n\n\nexport default ECpage","\nimport React from 'react'\nimport { Extracurricular} from \"../@types\"\n\ninterface ECchooserProps {\n    ECs: Extracurricular[]\n    chosenECs: Extracurricular[]\n    onUpdate: (ECs: Extracurricular[]) => void \n}\n\n\nconst ECchooser = (props: ECchooserProps) => {\n    const { chosenECs, onUpdate } = props\n    if (!props.ECs) return <div></div>\n\n\n    return <div className = \"ex-chooser-wrapper\">\n        <h3>Select relevant extracurriculars</h3>\n        <div className = \"app-add-ec-chooser\">\n        {props.ECs.map(ec => <div\n            key = {ec._id} \n            className = \"ec-chooser-item\"\n            onClick = {(e: any) => {\n            if (chosenECs.includes(ec)) {\n                e.target.className = \"ec-chooser-item\"\n                const updated = [...chosenECs]\n                const index = updated.indexOf(ec)\n                updated.splice(index, 1)\n                onUpdate(updated)\n\n            }\n            else {\n                e.target.className = \"ec-chooser-item-selected\"\n                onUpdate([...chosenECs, ec])\n\n\n\n            }\n        }}>{ec.name}</div>)}\n    </div>\n    </div>\n\n}\n\n\n\nexport default ECchooser","import { ApplicationSubmission, Extracurricular } from \"../@types\"\nimport React , {useState} from 'react'\nimport * as joi from \"joi\"\nimport ECchooser from \"./ECchooser\"\nimport { toast } from \"react-toastify\"\n\ninterface AppCreateFormProps {\n    onSubmit: (app: ApplicationSubmission) => void\n    ECs: Extracurricular[];\n}\nconst AppCreateForm = (props: AppCreateFormProps) => {\n    const [uniName, setUniName] = useState(\"\")\n    const [programName, setProgramName] = useState(\"\")\n    const [applicationOpenDate, setApplicationOpenDate] = useState(0)\n    const [applicationCloseDate, setApplicationCloseDate] = useState(0)\n    const [expectedResponseDate, setExpectedResponseDate] = useState(0)\n    const [relevantExtracurriculars, setRelevantExtracurriculars] = useState<Extracurricular[]>([])\n    const [notes, setNotes] = useState(\"\")\n\n    \n\n    return (\n        <div className = \"app-add-form-wrapper\">\n            <div className = \"app-add-form\">\n                <div className = \"app-add-input-item\">\n                        <label htmlFor = \"uniName\">University Name</label>\n                        <input name = \"uniName\" onChange = {(e) => {setUniName(e.target.value)}} defaultValue = {uniName} />\n                </div>\n                <div className = \"app-add-input-item\">\n                        <label htmlFor = \"programName\">Program Name</label>\n                        <input name = \"programName\" onChange = {(e) => {setProgramName(e.target.value)}} defaultValue = {programName} />\n                </div>\n\n                <div className = \"app-add-input-item\">\n                        <label htmlFor = \"appOpenDate\">Application Open Date</label>\n                        <input type = \"date\" name = \"appOpenDate\" onChange = {(e) => {setApplicationOpenDate(Date.parse(e.target.value))}} />\n                </div>\n                <div className = \"app-add-input-item\">\n                        <label htmlFor = \"appCloseDate\">Application Close Date</label>\n                        <input type = \"date\" name = \"appCloseDate\" onChange = {(e) => {setApplicationCloseDate(Date.parse(e.target.value))}} />\n                </div>\n                <div className = \"app-add-input-item\">\n                        <label htmlFor = \"responseDate\">Expected Response Date</label>\n                        <input type = \"date\" name = \"responseDate\" onChange = {(e) => {setExpectedResponseDate(Date.parse(e.target.value))}} />\n                </div>\n\n                <div className = \"app-add-input-item\">\n                        <label htmlFor = \"notes\">Extra Notes</label>\n                        <textarea name = \"notes\" onChange = {(e) => {setNotes(e.target.value)}} defaultValue = {notes} />\n                </div>\n                <div className = \"app-add-input-item\">\n                    <ECchooser ECs = {props.ECs} chosenECs = {relevantExtracurriculars} onUpdate = {setRelevantExtracurriculars} />\n                </div>\n                <button className = \"app-submit\" onClick = { async () => {\n                const app: ApplicationSubmission = {uniName, programName, applicationOpenDate, applicationCloseDate, expectedResponseDate, notes, relevantExtracurriculars}\n                const isValid = await ValidateApplication(app)\n                if (isValid) return props.onSubmit(app)\n                else return \n            }}>\n                \n                Submit\n            </button>\n            </div>\n            \n        </div>\n    )\n}\n\n\nasync function ValidateApplication(app: Object): Promise<boolean>  {\n    const schema = joi.object({\n        uniName: joi.string()\n            .min(6)\n            .max(255)\n            .required()\n            .messages({\n                \"string.min\": \"University name must be at least 6 characters\"\n            }),\n        \n        programName: joi.string()\n                        .min(6)\n                        .max(255)\n                        .required(),\n        \n        applicationOpenDate: joi.date()\n                                .min(1)\n                                .options({convert: true})\n                                .required()\n                                .messages({\"date.min\": \"Please Enter a valid application open date\"}),\n\n        applicationCloseDate: joi.date()\n                                .min(6)                                \n                                .options({convert: true})\n                                .required()\n                                .messages({\"date.min\": \"Please Enter a valid application close date\"}),\n\n        expectedResponseDate : joi.date()\n                                .min(6)\n                                .options({convert: true})\n                                .messages({\"date.min\": \"Please Enter a valid response date\"}),\n                                \n\n        relevantExtracurriculars: joi.array(),\n\n        notes: joi.string().min(1).max(4096),\n\n        includeAllExtraCurriculars: joi.number()\n    })\n\n    try {\n        await schema.validateAsync(app)\n        return true\n    }\n    catch(err: any) {\n        toast.error(err.details[0].message)\n        return false \n    }\n}\n\nexport default AppCreateForm","import React, { useContext, useEffect, useState } from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport tokenContext from '../../contexts/tokenContext'\nimport AppCreateForm from './AppCreateForm'\nimport { Application, ApplicationSubmission, Extracurricular } from \"../@types\"\nimport axios from 'axios'\nimport { toast } from 'react-toastify'\n\n\nconst ROOT_URL = process.env.REACT_APP_root_url\n\nconst AppCreatePage = (props: RouteComponentProps) => {\n    const {token} = useContext(tokenContext)\n    const [ECs, setECs] = useState<Extracurricular[]>()\n\n    useEffect(() => {\n        getECs(token).then(ECdata => setECs(ECdata))\n    }, [token])\n\n\n    if (!token) return <Redirect to = \"/login\" />\n\n    return <AppCreateForm ECs ={ECs as Extracurricular[]} onSubmit = {(app: ApplicationSubmission) => {SubmitApplication(token, app, props.history.replace)}}/>\n\n}\n\n\nasync function getECs(token: string): Promise<Extracurricular[] | undefined> {\n    try {\n        const response = await axios.get(ROOT_URL + \"/extracurriculars\", {headers: {user_auth_token: token}})\n        const ECdata: Extracurricular[] = response.data\n        return ECdata\n    }\n    catch(err: any){\n        toast.error(err.response)\n        return undefined\n    }\n}\n\n\nasync function SubmitApplication(token: string, app: ApplicationSubmission, redirect: (path: string) => void): Promise<Application | void> {\n    console.log(app)\n    try {\n        const response = await axios.post(ROOT_URL + \"/applications\", app, {headers: {user_auth_token: token}})\n        redirect(response.data._id)\n    }    \n    catch(err) { \n        console.log(err)\n        return undefined\n    }\n}\n\nexport default AppCreatePage","import React, {useState} from 'react'\nimport { reference } from \"../@types\"\ninterface referenceChooserProps {\n    references: reference[]\n    setReferences: (refs: reference[]) => void\n}\n\nconst ReferenceChooser = (props: referenceChooserProps) => {\n\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [number, setNumber] = useState(\"\")\n\n    if (props.references.length === 0) {\n        return (\n        <div className = \"reference-box-wrapper\">\n         <h3>No references provided</h3>   \n        <div className = \"reference-add-wrapper\">\n            <h5>Add References</h5>\n            <div>\n            <input onChange = {(e) => setName(e.target.value)} type =\"text\" placeholder = \"John Smith\" />\n            <input onChange = {(e) => setEmail(e.target.value)} type =\"email\" placeholder = \"johnsmith@email.com\" />\n            <input onChange = {(e) => setNumber(e.target.value)} type =\"tel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" placeholder = \"(123)-456-789\" />\n            <button onClick = {() => {\n                if (name)\n                    props.setReferences([...props.references, {name, email, phoneNumber: number}])\n                setName(\"\")\n                setEmail(\"\")\n                setNumber(\"\")\n            }} >Add Reference</button>\n             </div>\n        </div>\n</div>\n             )\n    }\n\n    return (\n    <div className = \"reference-box-wrapper\">\n        <div className = \"heading-wrapper\">\n            <span>Reference Name</span>\n            <span>Email</span>\n            <span>Phone Number</span>\n        </div>\n        <div className = \"references-wrapper\">\n        {props.references.map(ref => {\n            return <div className = \"reference-item\" key = {ref.name + ref.email + ref.phoneNumber}>\n                <span>{ref.name}</span>\n                <span>{ref.email || \"No email provided\"}</span>\n                <span>{ref.phoneNumber || \"No phone number provided\"}</span>\n                <button onClick = {() => {\n                    const index = props.references.findIndex((r) => r.name === ref.name)\n                    const newReferences = [...props.references]\n                    newReferences.splice(index, 1)\n                    props.setReferences(newReferences)\n                }}>X</button>\n                </div>\n        })}\n        </div>\n        <div className = \"reference-add-wrapper\">\n            <h5>Add References</h5>\n            <div>\n            <input onChange = {(e) => setName(e.target.value)} type =\"text\" placeholder = \"John Smith\" />\n            <input onChange = {(e) => setEmail(e.target.value)} type =\"email\" placeholder = \"johnsmith@email.com\" />\n            <input onChange = {(e) => setNumber(e.target.value)} type =\"tel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" placeholder = \"(123)-456-789\" />\n            <button onClick = {() => {\n                if (name)\n                     props.setReferences([...props.references, {name, email, phoneNumber: number}])\n                setName(\"\")\n                setEmail(\"\")\n                setNumber(\"\")\n            }} >Add Reference</button>\n            </div>\n        </div>\n    </div>\n    )\n\n}\n\nexport default ReferenceChooser\n\n","import React, {Component} from 'react'\nimport * as joi from \"joi\"\nimport { ExtracurricularSubmission, reference } from \"../@types\" \nimport { toast } from 'react-toastify'\nimport ReferenceChooser from \"./ReferenceChooser\"\n\ninterface ECcreateFormProps {\n    onSubmit: (EC: ExtracurricularSubmission) => void \n}\n\ninterface ECcreateFormState extends ExtracurricularSubmission {\n}\n\n\nexport default class ECcreateForm extends Component<ECcreateFormProps> {\n    state : ECcreateFormState = {\n        name: \"\",\n        description: \"\",\n        dateStarted: 0,\n        dateEnded: 0,\n        onGoing: false,\n        references: []\n    }\n\n\n    render(){\n        return (\n            <div className = \"ec-create-form-wrapper\">\n                <div className = \"ec-create-form\">\n                    \n                    <div className = \"ec-input-wrapper\">\n                        <label htmlFor = \"name\">Extracurricular Name</label>\n                        <input name = \"name\" onChange = {(e) => {this.setState({name: e.target.value})}}/>\n                    </div>\n\n\n                    <div className = \"ec-input-wrapper\">\n                        <label htmlFor = \"description\">Extracurricular Description</label>\n                        <textarea name = \"description\" onChange = {(e) => {this.setState({description: e.target.value})}}/>\n                    </div>\n\n                    <div className = \"ec-input-wrapper\">\n                        <label htmlFor = \"dateStarted\">Start Date</label>\n                        <input type= \"date\" name = \"dateStarted\" onChange = {(e) => {this.setState({dateStarted: Date.parse(e.target.value)})}}/>\n                    </div>\n                    \n                    <div className = \"ec-input-wrapper\">\n                        <label htmlFor = \"dateEnded\">End Date</label>\n                        {\n                        (this.state.onGoing) ? \n                        <input type=\"date\" disabled name = \"dateEnded\" onChange = {(e) => {this.setState({dateEnded: Date.parse(e.target.value)})}}/> :\n                        <input type= \"date\" name = \"dateEnded\" onChange = {(e) => {this.setState({dateEnded: Date.parse(e.target.value)})}}/>\n                        }\n                    </div>\n\n                    <button onClick = {() => this.setState({onGoing : !this.state.onGoing, })} \n                            className = {((this.state.onGoing) ? \"ec-ongoing-toggle-true\": \"ec-ongoing-toggle\")}>\n                    Ongoing?                                     \n                    </button>\n\n                    <ReferenceChooser setReferences = {(ref: reference[]) => {this.setState({references: ref})}} references = {this.state.references!} />\n                    <button className = \"submit-ec\" onClick = {async () => {\n                    const isValid = await ValidateEC(this.state)\n                    if (isValid)\n                        this.props.onSubmit(this.state)\n                    }}>Submit</button>\n                </div>\n               \n            </div>\n        )\n    \n    }\n}\n\n\n\nasync function ValidateEC(EC: ExtracurricularSubmission): Promise<boolean> {\n    const schema = joi.object({\n        name: joi.string()\n            .min(6)\n            .max(255)\n            .required()\n            .messages({\n                \"string.max\": \"Please limit name to 255 characters.\",\n                \"string.required\": \"Please enter a name.\",\n                \"string.min\": \"Please enter a name.\"\n            }),\n        \n        description: joi.string()\n                        .min(6)\n                        .max(4096)\n                        .required()\n                        .messages({\n                            \"string.max\": \"Please limit description to 4096 characters.\",\n                            \"string.min\": \"Please enter a description.\",\n                            \"string.required\": \"Please enter a description.\"\n                        }),\n        \n        dateStarted: joi.date()\n                                .min(1)\n                                .options({convert: true})\n                                .required(),\n\n        dateEnded: joi.date(),\n\n        onGoing :  joi.boolean(),\n        references: joi.array()\n    })\n\n    try {\n        await schema.validateAsync(EC)\n        return true\n    }\n    catch(err: any) {\n        toast.error(err.details[0].message)\n        return false\n    }\n}","import React, { useContext } from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\nimport tokenContext from '../../contexts/tokenContext';\nimport { ExtracurricularSubmission } from '../@types';\nimport axios from 'axios';\nimport ECcreateForm from \"./ECcreateForm\"\nimport { toast } from 'react-toastify';\n\nconst ROOT_URL = process.env.REACT_APP_root_url\n\n\nconst ECcreatePage = (props: RouteComponentProps) => {\n    const { token }= useContext(tokenContext)\n\n    if (!token) return <Redirect to =\"/login\" />\n\n    else return (\n        <div className = \"ec-create-page-wrapper\">\n            <ECcreateForm onSubmit = {(EC: ExtracurricularSubmission) => {SubmitEC(EC, token, props.history.replace)}}/>\n        </div>\n    )\n\n\n}\n\n\nasync function SubmitEC(EC: ExtracurricularSubmission, token: string, redirect: (path: string) => void): Promise<void> {\n    try {\n        console.log(EC)\n        await axios.post(ROOT_URL + \"/extracurriculars\", EC, {headers: {user_auth_token: token}})\n        redirect(\"/\")\n    }\n    catch(err) {toast.error(\"There was an error uploading your extracurricular\")}\n}\n\n\n\nexport default ECcreatePage","import React, { useContext }  from 'react'\nimport { essay } from '../@types'\nimport { Link } from \"react-router-dom\"\nimport {AiOutlineCloseCircle} from \"react-icons/ai\"\nimport tokenContext from '../../contexts/tokenContext'\nimport axios from 'axios'\n\nconst ROOT_URL = process.env.REACT_APP_root_url\n\ninterface EssayViewerProps {\n    essay: essay;\n    onClose: () => void;\n    onDelete: (id: string) => void\n}\n\nconst EssayViewer = (props: EssayViewerProps) => {\n    const {token} = useContext(tokenContext)\n    return <div className = \"essay-viewer\">\n                <button onClick = {props.onClose}>< AiOutlineCloseCircle/></button>\n                <h2>{props.essay.title}</h2>\n                <pre>{props.essay.body}</pre>\n                {props.essay.targetSchool && <h4>Target School: {props.essay.targetSchool}</h4>}\n                <Link to = {\"/essays/edit/\" + props.essay._id}>Edit</Link>\n                <button className = \"essay-delete\" onClick = { async () => {\n                    await axios.delete(ROOT_URL + \"/essays/\" + props.essay._id, {headers: {user_auth_token: token}})\n                    props.onDelete(props.essay._id)\n                    props.onClose()\n                }}>Delete</button>\n           </div>\n}\n\n\nexport default EssayViewer","import axios from 'axios'\nimport React, { Component } from 'react'\nimport { essay  } from \"../@types\"\nimport EssayViewer from './EssayViewer'\nimport { Link } from \"react-router-dom\"\n\nconst ROOT_URL = process.env.REACT_APP_root_url\n\ninterface EssayManagerProps {\n    token: string;\n}\n\ninterface EssayManagerState {\n    essays: essay[];\n    selectedEssay?: essay ;\n}\n\nexport class EssayManager extends Component<EssayManagerProps> {\n    state: EssayManagerState= {\n        essays: [],\n        selectedEssay: undefined,\n    }\n\n    async componentDidMount() {\n        await this.getEssays()\n    }\n\n    render() {\n        return (<React.Fragment>\n                    <div className = \"essay-manager-wrapper\">\n                        {this.state.essays.map(es => <div key = {es._id} className = \"essay-item\" onClick = {() => this.setState({selectedEssay: es})}>{es.title}</div>)}\n                        <Link to = \"/essays/add\">Add Essay</Link>\n                    </div>\n                    {this.state.selectedEssay && <EssayViewer onDelete = {this.deleteEssay} onClose = { this.closeViewer } essay = {this.state.selectedEssay!} /> }\n                </React.Fragment>)\n    }\n\n\n    closeViewer = () => this.setState({selectedEssay: undefined})\n\n    getEssays = async () => {\n        try {\n            const {data: responseData} = await axios.get(ROOT_URL + \"/essays\", {headers: {user_auth_token: this.props.token}})\n            this.setState({essays: responseData})\n        }\n        catch(err: any) {\n            console.log(err)\n        }\n    }\n\n    deleteEssay = (id: string) => {\n        const index = this.state.essays.findIndex(e => e._id === id);\n        const newEssays = [...this.state.essays]\n        newEssays.splice(index , 1);\n        this.setState({essays: newEssays})\n    }\n}","import React, { useContext } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport tokenContext from '../../contexts/tokenContext'\nimport { EssayManager } from './EssayManager'\n\nexport const ProfilePage = (props: RouteComponentProps) => {\n    const {token} = useContext(tokenContext)\n    return (\n        <div className = \"pfp-wrapper\">  \n            <EssayManager token = {token} />\n\n\n        </div>\n    )\n}","import axios from 'axios'\nimport React, { Component } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { essaySubmission } from \"../@types\"\n\nconst ROOT_URL = process.env.REACT_APP_root_url\n\ninterface EssayFormProps extends RouteComponentProps{\n    token: String,\n    edit?: boolean\n}\n\nexport default class EssayForm extends Component<EssayFormProps> {\n    state = {\n        title: \"\",\n        body: \"\",\n        targetSchool: \"\"\n    }\n\n    async componentDidMount() {\n        try {\n            //@ts-ignore\n            const { data: essay }= await axios.get(ROOT_URL + \"/essays/\" + this.props.match.params.id, {headers: {user_auth_token: this.props.token}})\n            const { title, body, targetSchool} = (essay as essaySubmission)\n            this.setState({ title, body, targetSchool})\n        }\n        catch(err) {\n            toast.error(\"Error fetching essay data\")\n        }\n    }\n\n    render() {\n        if (this.props.edit) return (\n            <div className = \"essay-form-wrapper\">\n                <div className=\"essay-form\">\n\n                    <div className = \"essay-form-input\">\n                        <label htmlFor=\"title\">Essay Title</label>\n                        <input type = \"text\" name = \"title\" defaultValue = {this.state.title} onChange = { e => this.setState({title: e.target.value})} />\n                    </div>\n\n                    <div className = \"essay-form-input\">\n                        <label htmlFor=\"body\">Essay Body</label>\n                        <textarea name = \"body\" defaultValue = {this.state.body} onChange = { e => this.setState({body: e.target.value})}/>\n                    </div>\n\n                    <button onClick = {this.submitEdit}>Submit</button>\n                </div>\n            </div>\n        )\n        return (\n        <div className = \"essay-form-wrapper\">\n                    <div className=\"essay-form\">\n\n                        <div className = \"essay-form-input\">\n                            <label htmlFor=\"title\">Essay Title</label>\n                            <input type = \"text\" name = \"title\" onChange = { e => this.setState({title: e.target.value})} />\n                        </div>\n                        \n                        <div className = \"essay-form-input\">\n                            <label htmlFor=\"targetSchool\">Target School</label>\n                            <input type = \"text\" name = \"targetSchool\"  onChange = { e => this.setState({targetSchool: e.target.value})} />\n                        </div>\n\n                        <div className = \"essay-form-input\">\n                            <label htmlFor=\"body\">Essay Body</label>\n                            <textarea name = \"body\" onChange = { e => this.setState({body: e.target.value})}/>\n                        </div>\n\n                        <button onClick = {this.submitNew}>Submit</button>\n                    </div>\n                </div>\n    )\n    }\n\n\n    submitEdit = async () => {\n        const {title, body, targetSchool} = this.state;\n        const newEssay : essaySubmission = {title, body, targetSchool}\n\n        try {\n            //@ts-ignore\n            await axios.put(ROOT_URL + \"/essays/\" + this.props.match.params.id, newEssay, {headers: {user_auth_token: this.props.token}})\n            this.props.history.goBack()\n        }   \n        catch(err: any) {\n            console.log(err)\n        }\n    \n    }\n\n    submitNew = async () => {\n        const {title, body, targetSchool} = this.state;\n        const newEssay : essaySubmission = {title, body, targetSchool}\n\n        try {\n            //@ts-ignore\n            await axios.post(ROOT_URL + \"/essays\" , newEssay, {headers: {user_auth_token: this.props.token}})\n            this.props.history.goBack()\n        }   \n        catch(err: any) {\n            console.log(err)\n        }\n    \n    }\n}","import React, { useContext } from 'react'\nimport { BrowserRouter, RouteComponentProps, Switch , Route} from 'react-router-dom'\nimport tokenContext from '../../contexts/tokenContext'\nimport EssayForm from './EssayForm'\n\nconst EssayPage = (props: RouteComponentProps) => {\n    const { token } = useContext(tokenContext)\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path =\"/essays/edit/:id\" render = {(props: RouteComponentProps) =>  <EssayForm {...props} token = {token} edit = {true} />} />\n                <Route path =\"/essays/add\" render = {(props: RouteComponentProps) => <EssayForm {...props} token = {token} edit = {false} />} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default EssayPage\n","import React, { Component } from 'react'\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport LoginPage from './components/LoginPage/LoginPage'\nimport SignupPage from './components/SignupPage/SignupPage'\nimport tokenContext from \"./contexts/tokenContext\"\nimport Homepage from './components/Homepage/Homepage'\nimport ApplicationPage from './components/ApplicationPage/ApplicationPage'\nimport 'react-toastify/dist/ReactToastify.css';\nimport ECpage from './components/ECpage/ECpage'\nimport AppCreatePage from './components/AppCreatePage/AppCreatePage'\nimport ECcreatePage from './components/ECcreatePage/ECcreatePage'\nimport { ProfilePage } from './components/ProfilePage/Profile'\nimport EssayPage from './components/EssayCreatePage/EssayPage'\n\nexport default class App extends Component  {\n    state = {\n        token: \"\"\n    }\n\n\n\n    render() {\n       return (\n        <tokenContext.Provider value = {{token: this.state.token, setToken : this.setToken}}>\n            <BrowserRouter>\n            <Switch>\n                <Route path = \"/extracurriculars/add\" render = {(props) => <ECcreatePage {...props} />} />\n                <Route path = \"/applications/add\" render = {(props) => <AppCreatePage {...props} />} />\n                <Route path = \"/applications/:id\" render = {(props) => <ApplicationPage {...props} />} />\n                <Route path = \"/extracurriculars/:id\" render = {(props) => <ECpage {...props} />} />\n                <Route path = \"/login\" render = {(props) => <LoginPage {...props} />} />\n                <Route path = \"/signup\" render = {(props) => <SignupPage {...props} />} />\n                <Route path = \"/essays\" render = {(props) => <EssayPage {...props} />} />\n                <Route path = \"/profile\" render = {(props) => <ProfilePage {...props} />} />\n                <Route path = \"/\" render = {(props) => <Homepage {...props} />} />\n            </Switch>\n        </BrowserRouter>\n        </tokenContext.Provider>\n       )\n    }\n    setToken = (token: string): void =>{\n        this.setState({token})\n    }\n    \n    \n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}